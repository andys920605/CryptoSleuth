// Code generated by MockGen. DO NOT EDIT.
// Source: sleuth/repository/interface (interfaces: IWalletTransationHistoryExt)
//
// Generated by this command:
//
//	mockgen -destination=test/mock/iwallet_transaction_history_mock_ext.go -package=mock sleuth/repository/interface IWalletTransationHistoryExt
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	repository "sleuth/model/repository"
	errs "sleuth/utils/errs"

	gomock "go.uber.org/mock/gomock"
)

// MockIWalletTransationHistoryExt is a mock of IWalletTransationHistoryExt interface.
type MockIWalletTransationHistoryExt struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletTransationHistoryExtMockRecorder
}

// MockIWalletTransationHistoryExtMockRecorder is the mock recorder for MockIWalletTransationHistoryExt.
type MockIWalletTransationHistoryExtMockRecorder struct {
	mock *MockIWalletTransationHistoryExt
}

// NewMockIWalletTransationHistoryExt creates a new mock instance.
func NewMockIWalletTransationHistoryExt(ctrl *gomock.Controller) *MockIWalletTransationHistoryExt {
	mock := &MockIWalletTransationHistoryExt{ctrl: ctrl}
	mock.recorder = &MockIWalletTransationHistoryExtMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletTransationHistoryExt) EXPECT() *MockIWalletTransationHistoryExtMockRecorder {
	return m.recorder
}

// GetWalletTransactionHistory mocks base method.
func (m *MockIWalletTransationHistoryExt) GetWalletTransactionHistory(arg0 context.Context, arg1 string) (*repository.TransactionResponse, *errs.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletTransactionHistory", arg0, arg1)
	ret0, _ := ret[0].(*repository.TransactionResponse)
	ret1, _ := ret[1].(*errs.ErrorResponse)
	return ret0, ret1
}

// GetWalletTransactionHistory indicates an expected call of GetWalletTransactionHistory.
func (mr *MockIWalletTransationHistoryExtMockRecorder) GetWalletTransactionHistory(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletTransactionHistory", reflect.TypeOf((*MockIWalletTransationHistoryExt)(nil).GetWalletTransactionHistory), arg0, arg1)
}

// GetWalletTransactionHistoryByTxhash mocks base method.
func (m *MockIWalletTransationHistoryExt) GetWalletTransactionHistoryByTxhash(arg0 context.Context, arg1 string) (*repository.GetTransactionByHashRsp, *errs.ErrorResponse) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWalletTransactionHistoryByTxhash", arg0, arg1)
	ret0, _ := ret[0].(*repository.GetTransactionByHashRsp)
	ret1, _ := ret[1].(*errs.ErrorResponse)
	return ret0, ret1
}

// GetWalletTransactionHistoryByTxhash indicates an expected call of GetWalletTransactionHistoryByTxhash.
func (mr *MockIWalletTransationHistoryExtMockRecorder) GetWalletTransactionHistoryByTxhash(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWalletTransactionHistoryByTxhash", reflect.TypeOf((*MockIWalletTransationHistoryExt)(nil).GetWalletTransactionHistoryByTxhash), arg0, arg1)
}
